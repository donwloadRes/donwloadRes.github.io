---
layout: post
title: "JavaWeb个人通讯录"
date:   2024-04-14
tags: [联系人,数据库,通讯录,Java,项目]
comments: true
author: admin
---
# JavaWeb个人通讯录

## 项目简介

本项目是一个基于Java Web技术实现的个人通讯录应用。利用JSP（Java Server Pages）作为视图层，Servlet作为控制层，结合JDBC（Java Database Connectivity）进行数据库操作，实现了简单易用的联系人管理功能。适合Java Web入门学习者和初级开发者研究与实践，以加深对前端展示、后端处理以及数据库交互的理解。

## 技术栈

- **JSP**: 用于构建动态网页，显示数据和接收用户输入。
- **Servlet**: 处理HTTP请求，业务逻辑的中心，与JSP协同工作完成前后端交互。
- **JDBC**: 直接与数据库通信，执行SQL语句，完成数据的增删改查。
- **MySQL**: 关系型数据库，存储通讯录中的联系人信息。
- **HTML/CSS/JavaScript**: 辅助增强页面布局和用户体验。

## 功能特性

1. **添加联系人**：用户可以输入联系人的相关信息，如姓名、电话号码、电子邮件等，并将其保存到数据库中。
2. **查看联系人列表**：列出所有已保存的联系人信息，支持分页浏览。
3. **编辑联系人**：选择特定联系人进行信息修改。
4. **删除联系人**：从通讯录中移除不再需要的联系人记录。
5. **搜索联系人**：通过姓名或电话号码快速查找联系人。

## 快速启动

1. **环境准备**：确保你的开发环境中安装有JDK、Eclipse/IntelliJ IDEA、Tomcat服务器以及MySQL数据库。
2. **导入项目**：将此仓库克隆到本地，然后在IDE中导入为Web项目。
3. **配置数据库**：创建名为`contact_db`的数据库，并导入项目提供的SQL脚本来初始化表结构。
4. **修改配置**：根据实际数据库设置修改项目的连接字符串（通常位于`.properties`文件中）。
5. **运行项目**：将项目部署至Tomcat服务器，通过浏览器访问项目首页开始使用。

## 学习资源

对于初学者，了解以下概念和技术将有助于更好地理解和开发该项目：
- JSP基础与指令标签。
- Servlet生命周期与请求响应处理。
- JDBC与事务管理。
- HTML表单处理及GET/POST方法。
- 数据库设计基础与SQL语言。

## 贡献与反馈

欢迎各位开发者提出建议、报告问题或贡献代码。任何形式的帮助都将促进该项目的完善，共同提升学习与交流的价值。请通过GitHub的 Issue 页面提交反馈或改进意见。

---

通过参与这个项目，不仅能学习到Java Web开发的基础知识，还能实践数据库操作和MVC模式的应用，是学习进阶的不错选择。祝您编码愉快！

## 下载链接

[JavaWeb个人通讯录](https://pan.quark.cn/s/ee58fe754db4)